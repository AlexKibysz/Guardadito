@model object
@using Microsoft.AspNetCore.Mvc.ModelBinding
@inject IModelMetadataProvider ModelMetadataProvider
@{
    var entityDisplayName = ViewData["Title"]?.ToString() ?? "Registro";
    var icon = ViewData["Icon"]?.ToString() ?? "fas fa-info-circle me-2";
    var metadata = ModelMetadataProvider.GetMetadataForType(Model.GetType());
}

<div class="container-fluid px-4">
    <div class="card shadow-sm border-0 rounded-3 mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">
                <i class="@icon"></i> Detalles de @entityDisplayName
            </h5>
        </div>
        <div class="card-body">
            <dl class="row">
                @foreach (var propertyMetadata in metadata.Properties)
                {
                    if (!propertyMetadata.ShowForDisplay) { continue; }

                    <dt class="col-sm-3 text-muted">
                        @propertyMetadata.DisplayName
                    </dt>
                    <dd class="col-sm-9">
                        @propertyMetadata.PropertyName: @Html.Display(propertyMetadata.PropertyName)
                    </dd>
                }
            </dl>
            <div class="mt-3">
                <a asp-page="./Index" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Volver
                </a>
                @if (metadata.Properties.Any(p => p.PropertyName == "Id"))
                {
                    <a asp-page="./Edit" asp-route-id="@(Model.GetType().GetProperty("Id")?.GetValue(Model))"
                        class="btn btn-primary">
                        <i class="fas fa-edit me-2"></i>Editar
                    </a>
                }
            </div>
        </div>
    </div>
</div>